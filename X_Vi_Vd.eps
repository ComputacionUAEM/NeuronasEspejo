%!PS-Adobe-2.0 EPSF-2.0
%%Title: X_Vi_Vd.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Mar 21 17:13:25 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (X_Vi_Vd.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Esau,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar 21 17:13:25 2012)
  /DOCINFO pdfmark
end
} ifelse
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
1.000 UL
LTb
670 320 M
63 0 V
6317 0 R
-63 0 V
stroke
610 320 M
[ [(Helvetica) 100.0 0.0 true true 0 (-1000)]
] -33.3 MRshow
1.000 UL
LTb
670 1057 M
63 0 V
6317 0 R
-63 0 V
stroke
610 1057 M
[ [(Helvetica) 100.0 0.0 true true 0 (-500)]
] -33.3 MRshow
1.000 UL
LTb
670 1793 M
63 0 V
6317 0 R
-63 0 V
stroke
610 1793 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
1.000 UL
LTb
670 2530 M
63 0 V
6317 0 R
-63 0 V
stroke
610 2530 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 500)]
] -33.3 MRshow
1.000 UL
LTb
670 3267 M
63 0 V
6317 0 R
-63 0 V
stroke
610 3267 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MRshow
1.000 UL
LTb
670 4003 M
63 0 V
6317 0 R
-63 0 V
stroke
610 4003 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1500)]
] -33.3 MRshow
1.000 UL
LTb
670 4740 M
63 0 V
6317 0 R
-63 0 V
stroke
610 4740 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2000)]
] -33.3 MRshow
1.000 UL
LTb
670 320 M
0 63 V
0 4357 R
0 -63 V
stroke
670 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MCshow
1.000 UL
LTb
1946 320 M
0 63 V
0 4357 R
0 -63 V
stroke
1946 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 20)]
] -33.3 MCshow
1.000 UL
LTb
3222 320 M
0 63 V
0 4357 R
0 -63 V
stroke
3222 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 40)]
] -33.3 MCshow
1.000 UL
LTb
4498 320 M
0 63 V
0 4357 R
0 -63 V
stroke
4498 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 60)]
] -33.3 MCshow
1.000 UL
LTb
5774 320 M
0 63 V
0 4357 R
0 -63 V
stroke
5774 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 80)]
] -33.3 MCshow
1.000 UL
LTb
7050 320 M
0 63 V
0 4357 R
0 -63 V
stroke
7050 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
670 4740 N
670 320 L
6380 0 V
0 4420 V
-6380 0 V
Z stroke
LCb setrgbcolor
/Times-Italic reencodeISO def
200 2530 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Italic) 140.0 0.0 true true 0 (Medida en milimetros)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3860 70 M
[ [(Times-Italic) 140.0 0.0 true true 0 (Patrones)]
] -46.7 MCshow
LTb
/Times-Roman reencodeISO def
3860 4890 M
[ [(Times-Roman) 180.0 0.0 true true 0 (Errores de X y Velocidades*tiempo)]
] -60.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
6567 4627 M
[ [(Helvetica) 100.0 0.0 true true 0 (Real X)]
] -33.3 MRshow
LT0
6627 4627 M
303 0 V
670 1745 M
64 12 V
64 -118 V
63 107 V
64 361 V
64 -67 V
64 23 V
64 -319 V
63 328 V
64 -382 V
64 353 V
64 200 V
64 -565 V
63 -454 V
64 690 V
64 -5 V
64 -37 V
64 26 V
63 -227 V
64 93 V
64 17 V
64 -207 V
64 308 V
63 -362 V
64 212 V
64 429 V
64 185 V
64 -827 V
63 -4 V
64 -26 V
64 332 V
64 -164 V
64 31 V
63 14 V
64 460 V
64 -188 V
64 254 V
64 -277 V
63 -428 V
64 419 V
64 31 V
64 -107 V
64 185 V
63 -269 V
64 10 V
64 -589 V
64 642 V
64 411 V
63 4 V
64 -629 V
64 -267 V
64 519 V
64 4 V
63 523 V
64 -427 V
64 561 V
64 -862 V
64 -571 V
63 199 V
64 -120 V
64 127 V
64 -174 V
64 -13 V
63 556 V
64 -77 V
64 -262 V
64 709 V
64 -135 V
63 -735 V
64 528 V
64 -51 V
64 44 V
64 28 V
63 722 V
64 -1372 V
64 906 V
64 128 V
64 -689 V
63 303 V
64 690 V
64 -879 V
64 112 V
64 146 V
63 324 V
64 -487 V
64 -34 V
64 967 V
64 -1382 V
63 9 V
64 326 V
64 476 V
64 -168 V
64 -5 V
63 -18 V
64 -990 V
64 592 V
64 823 V
64 -360 V
63 -913 V
64 91 V
64 1333 V
stroke
LT1
LTb
6567 4527 M
[ [(Helvetica) 100.0 0.0 true true 0 (Pred X)]
] -33.3 MRshow
LT1
6627 4527 M
303 0 V
670 1818 M
64 -82 V
64 -190 V
63 244 V
64 257 V
64 74 V
64 -66 V
64 -268 V
63 307 V
64 -424 V
64 357 V
64 214 V
64 -561 V
63 -396 V
64 437 V
64 251 V
64 48 V
64 -58 V
63 -223 V
64 16 V
64 17 V
64 -181 V
64 284 V
63 -359 V
64 207 V
64 447 V
64 98 V
64 -761 V
63 177 V
64 -317 V
64 487 V
64 -374 V
64 384 V
63 -224 V
64 595 V
64 -273 V
64 109 V
64 -149 V
63 -204 V
64 78 V
64 236 V
64 -270 V
64 402 V
63 -479 V
64 77 V
64 -424 V
64 552 V
64 206 V
63 43 V
64 -604 V
64 -48 V
64 451 V
64 -137 V
63 380 V
64 -117 V
64 453 V
64 -685 V
64 -675 V
63 163 V
64 -180 V
64 184 V
64 -202 V
64 3 V
63 565 V
64 -217 V
64 -174 V
64 734 V
64 -259 V
63 -391 V
64 292 V
64 -41 V
64 51 V
64 205 V
63 367 V
64 -1018 V
64 719 V
64 50 V
64 -770 V
63 456 V
64 540 V
64 -636 V
64 -328 V
64 697 V
63 312 V
64 -737 V
64 442 V
64 499 V
64 -1471 V
63 255 V
64 396 V
64 524 V
64 -697 V
64 408 V
63 12 V
64 -761 V
64 52 V
64 908 V
64 -136 V
63 -874 V
64 -104 V
64 1121 V
stroke
LT2
LTb
6567 4427 M
[ [(Helvetica) 100.0 0.0 true true 0 (Vi)]
] -33.3 MRshow
LT2
6627 4427 M
303 0 V
670 2990 M
64 21 V
64 -290 V
63 1154 V
925 2392 L
64 695 V
64 -245 V
64 9 V
63 -19 V
64 505 V
64 -527 V
64 -37 V
64 505 V
63 -865 V
64 1556 V
64 -501 V
64 -750 V
64 -904 V
63 369 V
64 285 V
64 743 V
64 -519 V
64 -223 V
63 85 V
64 -75 V
64 765 V
64 -261 V
64 -15 V
63 503 V
64 -513 V
64 46 V
64 622 V
64 -813 V
63 68 V
64 548 V
64 187 V
64 -702 V
64 9 V
63 -1 V
64 -397 V
64 688 V
64 -560 V
64 448 V
63 580 V
64 -823 V
64 -362 V
64 112 V
64 934 V
63 -1045 V
64 315 V
64 -138 V
64 718 V
64 -708 V
63 114 V
64 430 V
64 -334 V
64 -32 V
64 -381 V
63 -204 V
64 199 V
64 105 V
64 466 V
64 74 V
63 -22 V
64 -239 V
64 -227 V
64 189 V
64 -260 V
63 399 V
64 690 V
64 -690 V
64 -277 V
64 -357 V
63 924 V
64 465 V
64 -554 V
64 -604 V
64 212 V
63 76 V
64 -980 V
64 1362 V
64 45 V
64 -90 V
63 -295 V
64 41 V
64 206 V
64 288 V
64 -647 V
63 373 V
64 -784 V
64 607 V
64 -160 V
64 214 V
63 -1051 V
64 1171 V
64 -234 V
64 140 V
64 -289 V
63 564 V
64 -469 V
64 631 V
stroke
LT3
LTb
6567 4327 M
[ [(Helvetica) 100.0 0.0 true true 0 (Vd)]
] -33.3 MRshow
LT3
6627 4327 M
303 0 V
670 3082 M
64 -117 V
64 -244 V
63 702 V
64 -889 V
64 331 V
64 185 V
64 170 V
63 -237 V
64 -102 V
64 385 V
64 -204 V
64 -90 V
63 -715 V
64 1753 V
64 -438 V
64 -520 V
64 -1324 V
63 505 V
64 679 V
64 326 V
64 -185 V
64 -529 V
63 234 V
64 -625 V
64 819 V
64 -243 V
64 427 V
63 797 V
64 -956 V
64 109 V
64 271 V
64 -319 V
63 -395 V
64 1242 V
64 -557 V
64 -287 V
64 77 V
63 -187 V
64 -132 V
64 185 V
64 -313 V
64 193 V
63 909 V
64 -774 V
64 -783 V
64 225 V
64 1256 V
63 -888 V
64 140 V
64 122 V
64 -60 V
64 249 V
63 -241 V
64 -111 V
64 87 V
64 129 V
64 -664 V
63 -362 V
64 412 V
64 502 V
64 -258 V
64 122 V
63 22 V
64 191 V
64 -1074 V
64 1178 V
64 -344 V
63 203 V
64 502 V
64 -474 V
64 29 V
64 -970 V
63 662 V
64 1212 V
64 -1275 V
64 65 V
64 198 V
63 -132 V
64 -673 V
64 742 V
64 -173 V
64 715 V
63 -315 V
64 -101 V
64 53 V
64 -113 V
64 18 V
63 -118 V
64 -723 V
64 521 V
64 482 V
64 -496 V
63 -119 V
64 403 V
64 49 V
64 -109 V
64 60 V
63 -146 V
64 176 V
64 320 V
stroke
LT4
LTb
6567 4227 M
[ [(Helvetica) 100.0 0.0 true true 0 (cero Vi Vd)]
] -33.3 MRshow
LT4
6627 4227 M
303 0 V
670 2972 M
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
65 0 V
64 0 V
stroke
LTb
670 4740 N
670 320 L
6380 0 V
0 4420 V
-6380 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Times-Italic Helvetica
