%!PS-Adobe-2.0 EPSF-2.0
%%Title: Xpr.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Mar 27 14:52:46 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Xpr.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Esau,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 27 14:52:46 2012)
  /DOCINFO pdfmark
end
} ifelse
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
670 320 M
6380 0 V
stroke
LTb
670 320 M
63 0 V
6317 0 R
-63 0 V
stroke
610 320 M
[ [(Helvetica) 100.0 0.0 true true 0 (-600)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 873 M
6380 0 V
stroke
LTb
670 873 M
63 0 V
6317 0 R
-63 0 V
stroke
610 873 M
[ [(Helvetica) 100.0 0.0 true true 0 (-400)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 1425 M
6380 0 V
stroke
LTb
670 1425 M
63 0 V
6317 0 R
-63 0 V
stroke
610 1425 M
[ [(Helvetica) 100.0 0.0 true true 0 (-200)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 1978 M
6380 0 V
stroke
LTb
670 1978 M
63 0 V
6317 0 R
-63 0 V
stroke
610 1978 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 2530 M
6380 0 V
stroke
LTb
670 2530 M
63 0 V
6317 0 R
-63 0 V
stroke
610 2530 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 200)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 3083 M
6380 0 V
stroke
LTb
670 3083 M
63 0 V
6317 0 R
-63 0 V
stroke
610 3083 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 400)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 3635 M
6380 0 V
stroke
LTb
670 3635 M
63 0 V
6317 0 R
-63 0 V
stroke
610 3635 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 600)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 4188 M
6380 0 V
stroke
LTb
670 4188 M
63 0 V
6317 0 R
-63 0 V
stroke
610 4188 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 800)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 4740 M
6380 0 V
stroke
LTb
670 4740 M
63 0 V
6317 0 R
-63 0 V
stroke
610 4740 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
670 320 M
0 4420 V
stroke
LTb
670 320 M
0 63 V
0 4357 R
0 -63 V
stroke
670 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1349 320 M
0 4420 V
stroke
LTb
1349 320 M
0 63 V
0 4357 R
0 -63 V
stroke
1349 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1020)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2027 320 M
0 4420 V
stroke
LTb
2027 320 M
0 63 V
0 4357 R
0 -63 V
stroke
2027 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1040)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2706 320 M
0 4420 V
stroke
LTb
2706 320 M
0 63 V
0 4357 R
0 -63 V
stroke
2706 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1060)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3385 320 M
0 4420 V
stroke
LTb
3385 320 M
0 63 V
0 4357 R
0 -63 V
stroke
3385 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1080)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4064 320 M
0 4420 V
stroke
LTb
4064 320 M
0 63 V
0 4357 R
0 -63 V
stroke
4064 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1100)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4742 320 M
0 4420 V
stroke
LTb
4742 320 M
0 63 V
0 4357 R
0 -63 V
stroke
4742 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1120)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
5421 320 M
0 4420 V
stroke
LTb
5421 320 M
0 63 V
0 4357 R
0 -63 V
stroke
5421 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1140)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
6100 320 M
0 4420 V
stroke
LTb
6100 320 M
0 63 V
0 4357 R
0 -63 V
stroke
6100 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1160)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
6779 320 M
0 4157 V
0 200 R
0 63 V
stroke
LTb
6779 320 M
0 63 V
0 4357 R
0 -63 V
stroke
6779 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1180)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
670 4740 N
670 320 L
6380 0 V
0 4420 V
-6380 0 V
Z stroke
LCb setrgbcolor
/Times-Italic reencodeISO def
200 2530 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Italic) 140.0 0.0 true true 0 (Milimetros)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3860 70 M
[ [(Times-Italic) 140.0 0.0 true true 0 (Patrones)]
] -46.7 MCshow
LTb
/Times-Roman reencodeISO def
3860 4890 M
[ [(Times-Roman) 180.0 0.0 true true 0 (X Predicho y Real)]
] -60.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
6567 4627 M
[ [(Helvetica) 100.0 0.0 true true 0 (X Real)]
] -33.3 MRshow
LT0
6627 4627 M
303 0 V
670 2031 M
34 394 V
34 -34 V
34 -523 V
34 0 V
840 846 L
34 -23 V
34 1645 V
33 -804 V
34 -629 V
34 427 V
34 748 V
34 -1000 V
34 301 V
34 37 V
34 -243 V
34 -526 V
34 271 V
34 -49 V
34 250 V
34 518 V
34 1247 V
34 -1259 V
34 2 V
33 -285 V
34 -28 V
34 663 V
34 -153 V
34 964 V
34 -266 V
34 269 V
34 -269 V
34 -410 V
34 -519 V
34 -389 V
34 363 V
34 -10 V
34 -408 V
34 747 V
34 0 V
33 2 V
34 -164 V
34 606 V
34 -326 V
34 -45 V
34 -424 V
34 543 V
34 -356 V
34 650 V
34 -426 V
34 9 V
34 332 V
34 403 V
34 -810 V
34 632 V
33 -907 V
34 353 V
34 845 V
34 -264 V
34 -430 V
34 -528 V
34 465 V
34 652 V
34 -694 V
34 -600 V
34 584 V
34 80 V
34 500 V
34 -16 V
34 682 V
34 -1368 V
33 11 V
34 -916 V
34 129 V
34 274 V
34 792 V
34 542 V
34 345 V
34 -447 V
34 -334 V
34 -1 V
34 323 V
34 76 V
34 20 V
34 413 V
34 -1216 V
34 -631 V
33 -48 V
34 -762 V
34 -61 V
34 92 V
34 -29 V
34 1434 V
34 -1 V
34 1215 V
34 -703 V
34 -1427 V
34 -389 V
34 1491 V
34 -161 V
34 245 V
34 -207 V
33 -24 V
34 162 V
34 -1 V
34 -284 V
34 -328 V
34 272 V
34 -225 V
34 31 V
stroke 4369 1680 M
34 -1 V
34 -216 V
34 208 V
34 129 V
34 183 V
34 -442 V
34 124 V
34 -295 V
33 2 V
34 428 V
34 -316 V
34 -225 V
34 461 V
34 305 V
34 359 V
34 -538 V
34 -2 V
34 -677 V
34 64 V
34 42 V
34 184 V
34 39 V
34 -372 V
34 1032 V
33 505 V
34 -582 V
34 571 V
34 -397 V
34 -348 V
34 -51 V
34 -402 V
34 1439 V
34 -894 V
34 583 V
34 -10 V
34 -158 V
34 -1385 V
34 1382 V
34 -10 V
33 499 V
34 2 V
34 -1395 V
34 -28 V
34 3 V
34 692 V
34 267 V
34 -4 V
34 -527 V
34 446 V
34 -302 V
34 -769 V
34 -180 V
34 4 V
34 -106 V
34 519 V
33 495 V
34 -186 V
34 -622 V
34 730 V
34 11 V
34 239 V
34 -1 V
34 -269 V
34 187 V
34 1 V
34 -2 V
34 0 V
34 -681 V
34 408 V
34 375 V
34 -345 V
33 365 V
34 293 V
34 -440 V
34 330 V
34 0 V
34 0 V
34 1834 V
stroke
LT1
LTb
6567 4527 M
[ [(Helvetica) 100.0 0.0 true true 0 (X Pred)]
] -33.3 MRshow
LT1
6627 4527 M
303 0 V
670 2208 M
34 278 V
34 -166 V
34 -457 V
34 -234 V
840 912 L
874 779 L
34 1665 V
33 -600 V
34 -726 V
34 236 V
34 660 V
34 -560 V
34 145 V
34 70 V
34 -396 V
34 -541 V
34 384 V
34 144 V
34 -82 V
34 559 V
34 1047 V
34 -1121 V
34 -52 V
33 -109 V
34 -51 V
34 645 V
34 -216 V
34 731 V
34 -3 V
34 359 V
34 -369 V
34 -246 V
34 -747 V
34 -136 V
34 155 V
34 81 V
34 -347 V
34 929 V
34 -164 V
33 -77 V
34 -220 V
34 372 V
34 -139 V
34 54 V
34 -396 V
34 461 V
34 -410 V
34 656 V
34 -102 V
34 -125 V
34 299 V
34 197 V
34 -544 V
34 917 V
33 -1292 V
34 219 V
34 862 V
34 -186 V
34 -474 V
34 -560 V
34 494 V
34 667 V
34 -271 V
34 -1003 V
34 364 V
34 69 V
34 877 V
34 54 V
34 410 V
34 -1150 V
33 260 V
34 -980 V
34 139 V
34 -186 V
34 588 V
34 915 V
34 292 V
34 -581 V
34 -121 V
34 -337 V
34 650 V
34 -347 V
34 344 V
34 590 V
34 -1607 V
34 -212 V
33 85 V
34 -954 V
34 286 V
34 -370 V
34 -21 V
34 1012 V
34 116 V
34 1276 V
34 -33 V
34 -1593 V
34 -643 V
34 1473 V
34 -133 V
34 88 V
34 -61 V
33 -64 V
34 166 V
34 183 V
34 -468 V
34 -229 V
34 175 V
34 -186 V
34 48 V
34 -14 V
stroke 4403 1692 M
34 -119 V
34 70 V
34 130 V
34 120 V
34 -229 V
34 106 V
34 -294 V
33 -284 V
34 676 V
34 -234 V
34 -296 V
34 153 V
34 565 V
34 279 V
34 -552 V
34 186 V
34 -648 V
34 8 V
34 -206 V
34 430 V
34 -245 V
34 -79 V
34 913 V
33 190 V
34 -189 V
34 810 V
34 -791 V
34 -149 V
34 -171 V
34 -400 V
34 1179 V
34 -461 V
34 105 V
34 499 V
34 -365 V
34 -786 V
34 690 V
34 88 V
33 579 V
34 81 V
34 -1420 V
34 -222 V
34 194 V
34 508 V
34 216 V
34 390 V
34 -925 V
34 602 V
34 -348 V
34 -636 V
34 -252 V
34 32 V
34 7 V
34 499 V
33 165 V
34 -35 V
34 -444 V
34 213 V
34 622 V
34 17 V
34 -129 V
34 48 V
34 -148 V
34 127 V
34 -225 V
34 -98 V
34 -330 V
34 241 V
34 515 V
34 -399 V
33 131 V
34 497 V
34 -470 V
34 154 V
34 0 V
34 0 V
34 2141 V
stroke
LTb
670 4740 N
670 320 L
6380 0 V
0 4420 V
-6380 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Times-Italic Helvetica
