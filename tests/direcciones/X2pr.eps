%!PS-Adobe-2.0 EPSF-2.0
%%Title: X2pr.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Mar 27 14:52:48 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (X2pr.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Esau,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 27 14:52:48 2012)
  /DOCINFO pdfmark
end
} ifelse
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
610 320 M
6440 0 V
stroke
LTb
610 320 M
63 0 V
6377 0 R
-63 0 V
stroke
550 320 M
[ [(Helvetica) 100.0 0.0 true true 0 (-800)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 873 M
6440 0 V
stroke
LTb
610 873 M
63 0 V
6377 0 R
-63 0 V
stroke
550 873 M
[ [(Helvetica) 100.0 0.0 true true 0 (-600)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 1425 M
6440 0 V
stroke
LTb
610 1425 M
63 0 V
6377 0 R
-63 0 V
stroke
550 1425 M
[ [(Helvetica) 100.0 0.0 true true 0 (-400)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 1978 M
6440 0 V
stroke
LTb
610 1978 M
63 0 V
6377 0 R
-63 0 V
stroke
550 1978 M
[ [(Helvetica) 100.0 0.0 true true 0 (-200)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 2530 M
6440 0 V
stroke
LTb
610 2530 M
63 0 V
6377 0 R
-63 0 V
stroke
550 2530 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 3083 M
6440 0 V
stroke
LTb
610 3083 M
63 0 V
6377 0 R
-63 0 V
stroke
550 3083 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 200)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 3635 M
6440 0 V
stroke
LTb
610 3635 M
63 0 V
6377 0 R
-63 0 V
stroke
550 3635 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 400)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 4188 M
6440 0 V
stroke
LTb
610 4188 M
63 0 V
6377 0 R
-63 0 V
stroke
550 4188 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 600)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 4740 M
6440 0 V
stroke
LTb
610 4740 M
63 0 V
6377 0 R
-63 0 V
stroke
550 4740 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 800)]
] -33.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
610 320 M
0 4420 V
stroke
LTb
610 320 M
0 63 V
0 4357 R
0 -63 V
stroke
610 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1898 320 M
0 4420 V
stroke
LTb
1898 320 M
0 63 V
0 4357 R
0 -63 V
stroke
1898 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 50)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3186 320 M
0 4420 V
stroke
LTb
3186 320 M
0 63 V
0 4357 R
0 -63 V
stroke
3186 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4474 320 M
0 4420 V
stroke
LTb
4474 320 M
0 63 V
0 4357 R
0 -63 V
stroke
4474 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 150)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
5762 320 M
0 4420 V
stroke
LTb
5762 320 M
0 63 V
0 4357 R
0 -63 V
stroke
5762 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 200)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
7050 320 M
0 4420 V
stroke
LTb
7050 320 M
0 63 V
0 4357 R
0 -63 V
stroke
7050 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 250)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
610 4740 N
610 320 L
6440 0 V
0 4420 V
-6440 0 V
Z stroke
LCb setrgbcolor
/Times-Italic reencodeISO def
200 2530 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Italic) 140.0 0.0 true true 0 (Milimetros)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3830 70 M
[ [(Times-Italic) 140.0 0.0 true true 0 (Patrones)]
] -46.7 MCshow
LTb
/Times-Roman reencodeISO def
3830 4890 M
[ [(Times-Roman) 180.0 0.0 true true 0 (X Predicho y Real)]
] -60.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
6567 4627 M
[ [(Helvetica) 100.0 0.0 true true 0 (X Real)]
] -33.3 MRshow
LT0
6627 4627 M
303 0 V
610 3752 M
636 2562 L
26 1 V
687 705 L
26 364 V
26 747 V
26 730 V
25 812 V
26 -639 V
26 -36 V
26 -421 V
893 972 L
919 540 L
26 601 V
26 544 V
25 1955 V
26 12 V
26 725 V
26 8 V
25 -1796 V
26 -553 V
26 37 V
26 -602 V
25 1025 V
1228 473 L
26 216 V
26 -33 V
26 6 V
25 50 V
26 975 V
26 2145 V
26 34 V
25 -970 V
26 -1346 V
26 -574 V
26 -287 V
25 37 V
26 752 V
26 1434 V
26 373 V
25 868 V
26 -907 V
26 -991 V
26 905 V
25 -87 V
26 540 V
26 346 V
26 45 V
25 -1025 V
26 957 V
26 -520 V
26 776 V
26 68 V
25 -791 V
26 -647 V
2027 968 L
26 686 V
25 27 V
26 26 V
26 337 V
26 941 V
25 -1014 V
2207 901 L
26 803 V
26 726 V
25 -1077 V
26 593 V
26 -741 V
26 793 V
25 -602 V
26 2135 V
26 408 V
26 -841 V
25 -1686 V
26 -9 V
26 649 V
26 698 V
26 1474 V
25 -1457 V
26 -1008 V
26 -271 V
26 1033 V
25 805 V
26 -8 V
26 333 V
26 -1452 V
25 1213 V
26 802 V
26 -1975 V
26 567 V
25 836 V
26 993 V
26 -869 V
26 -842 V
25 -1158 V
26 978 V
26 -19 V
26 791 V
25 -1492 V
26 691 V
26 -441 V
26 739 V
26 -1001 V
25 503 V
26 -753 V
26 457 V
26 652 V
25 523 V
26 -511 V
26 -929 V
26 -297 V
25 245 V
26 701 V
26 889 V
26 397 V
25 -788 V
26 -72 V
26 -709 V
26 781 V
3675 442 L
26 370 V
26 1973 V
26 -45 V
25 355 V
26 1105 V
26 6 V
26 -2118 V
26 -490 V
25 2258 V
26 -1223 V
26 1676 V
26 -779 V
25 1105 V
26 -1556 V
26 -1072 V
26 218 V
25 9 V
26 74 V
26 22 V
26 467 V
25 543 V
26 3 V
26 -884 V
26 -372 V
25 835 V
26 129 V
26 -161 V
26 -600 V
25 337 V
26 -1129 V
26 1535 V
26 -271 V
26 -1275 V
25 597 V
26 -34 V
26 -1 V
26 1346 V
25 -226 V
26 344 V
26 -450 V
26 520 V
25 296 V
26 -434 V
26 -1984 V
26 431 V
25 -15 V
26 -386 V
26 1304 V
26 11 V
25 704 V
26 -27 V
26 -523 V
26 492 V
25 33 V
26 -27 V
26 -1068 V
26 -1 V
26 1 V
25 21 V
26 1 V
26 -3 V
26 -583 V
25 521 V
26 823 V
26 -401 V
26 792 V
25 -932 V
26 243 V
26 676 V
26 -626 V
25 499 V
26 -606 V
26 -443 V
26 0 V
25 7 V
26 -21 V
26 59 V
26 1 V
25 -1 V
26 625 V
26 -581 V
26 29 V
26 1191 V
25 71 V
26 -782 V
26 412 V
26 2 V
25 -61 V
26 90 V
26 -35 V
26 -333 V
25 -326 V
26 -442 V
26 1343 V
26 109 V
25 -1285 V
26 951 V
26 -491 V
26 -513 V
25 -877 V
26 1905 V
26 -410 V
26 -567 V
25 1008 V
stroke 6354 3450 M
26 -1162 V
26 742 V
26 -369 V
26 -54 V
25 931 V
26 -1472 V
26 372 V
26 -344 V
25 -371 V
26 1668 V
26 -1423 V
26 1381 V
25 1 V
26 -1 V
26 -821 V
26 887 V
25 -580 V
26 633 V
26 -1222 V
26 -1 V
25 188 V
26 871 V
26 -132 V
26 21 V
stroke
LT1
LTb
6567 4527 M
[ [(Helvetica) 100.0 0.0 true true 0 (X Pred)]
] -33.3 MRshow
LT1
6627 4527 M
303 0 V
610 3878 M
636 2762 L
26 364 V
687 1325 L
26 -285 V
26 399 V
26 588 V
25 1141 V
26 -849 V
26 565 V
26 -664 V
25 -994 V
919 729 L
26 450 V
26 840 V
25 1086 V
26 218 V
26 767 V
26 -84 V
25 -906 V
26 -425 V
26 -812 V
26 -184 V
25 986 V
26 -1648 V
26 -289 V
26 121 V
26 157 V
25 -23 V
26 292 V
26 2371 V
26 17 V
25 -363 V
26 -1851 V
26 -350 V
26 -147 V
25 -223 V
26 705 V
26 1134 V
26 683 V
25 782 V
26 -332 V
26 -1986 V
26 1851 V
25 -373 V
26 311 V
26 398 V
26 -499 V
25 -569 V
26 477 V
26 287 V
26 357 V
26 294 V
25 -534 V
26 -608 V
26 -1490 V
26 94 V
25 -81 V
26 -93 V
26 494 V
26 681 V
25 -646 V
26 -767 V
26 504 V
26 565 V
25 -805 V
26 358 V
26 -780 V
26 975 V
25 -739 V
26 2119 V
26 354 V
26 -1512 V
25 -877 V
26 147 V
26 377 V
26 398 V
26 1461 V
25 -744 V
26 -1883 V
26 187 V
26 1130 V
25 741 V
26 275 V
26 42 V
26 -1151 V
25 882 V
26 664 V
26 -1583 V
26 204 V
25 916 V
26 701 V
26 -705 V
26 -787 V
25 -656 V
26 345 V
26 1055 V
26 -171 V
25 -1202 V
26 606 V
26 -559 V
26 826 V
26 -736 V
25 368 V
26 -345 V
26 -143 V
26 484 V
25 806 V
26 -323 V
26 -1191 V
26 -355 V
25 440 V
26 647 V
26 836 V
26 275 V
25 -500 V
26 -82 V
stroke 3598 3158 M
26 -749 V
26 922 V
25 -2301 V
26 -161 V
26 1386 V
26 325 V
25 956 V
26 -267 V
26 530 V
26 -1442 V
26 -480 V
25 2072 V
26 -975 V
26 1106 V
26 -185 V
25 353 V
26 -1172 V
26 -1138 V
26 213 V
25 409 V
26 -421 V
26 626 V
26 18 V
25 329 V
26 273 V
26 -983 V
26 -244 V
25 667 V
26 289 V
26 -290 V
26 -621 V
25 388 V
26 -792 V
26 915 V
26 -59 V
26 -1202 V
25 625 V
26 -193 V
26 217 V
26 1296 V
25 -320 V
26 548 V
26 -612 V
26 646 V
25 184 V
26 -376 V
26 -2015 V
26 369 V
25 -59 V
26 -183 V
26 1378 V
26 71 V
25 327 V
26 -210 V
26 -354 V
26 763 V
25 -210 V
26 -134 V
26 -766 V
26 105 V
26 -303 V
25 279 V
26 187 V
26 -785 V
26 -208 V
25 733 V
26 569 V
26 -274 V
26 800 V
25 -871 V
26 186 V
26 551 V
26 -363 V
25 315 V
26 -539 V
26 -478 V
26 -538 V
25 980 V
26 -402 V
26 16 V
26 -302 V
25 568 V
26 903 V
26 -851 V
26 -50 V
26 787 V
25 -49 V
26 -360 V
26 445 V
26 234 V
25 -616 V
26 205 V
26 245 V
26 -737 V
25 75 V
26 -754 V
26 985 V
26 534 V
25 -1170 V
26 672 V
26 -230 V
26 -743 V
25 -489 V
26 1783 V
stroke 6277 3490 M
26 -379 V
26 -791 V
25 898 V
26 -893 V
26 436 V
26 11 V
26 -243 V
25 943 V
26 -1349 V
26 110 V
26 -158 V
25 -406 V
26 1601 V
26 -1184 V
26 892 V
25 448 V
26 -183 V
26 -463 V
26 332 V
25 -163 V
26 219 V
26 -745 V
26 59 V
25 81 V
26 458 V
26 325 V
26 -405 V
stroke
LTb
610 4740 N
610 320 L
6440 0 V
0 4420 V
-6440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Times-Italic Helvetica
